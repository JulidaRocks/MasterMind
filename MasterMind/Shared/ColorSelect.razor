@using MasterMind.Data;

<select @onchange="OnSelectionChanged" id="@Number" style="background-color:@SelectedColor.ToString().ToLower();width:35px;">
    @foreach (var item in Enum.GetNames(typeof(GameColors)))
    {
        if (item == GameColors.Undefined.ToString())
        {
            <option selected="@(SelectedColor.ToString() == item)" value=@item style="background-color:darkgray;">@item</option>
        }
        else
        {
            <option selected="@(SelectedColor.ToString() == item)" value=@item style="background-color:@item.ToLower();"></option>
        }
    }
</select>

@code {
    [Parameter]
    public int Number { get; set; }
    [Parameter]
    public GameColors SelectedColor { get; set; }
}

@functions {
    [Parameter]
    public EventCallback<KeyValuePair<int, GameColors>> OnChangeEvent { get; set; }

    private void OnSelectionChanged(ChangeEventArgs e)
    {
        var color = (GameColors)Enum.Parse(typeof(GameColors), e.Value.ToString());
        SelectedColor = color;
        OnChangeEvent.InvokeAsync(new KeyValuePair<int, GameColors>(Number, color));
    }
}
